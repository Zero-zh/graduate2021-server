<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.graduate.loyee.mapper.TransactionMapper" >
  <resultMap id="BaseResultMap" type="com.graduate.loyee.entity.Transaction" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="price_before" property="priceBefore" jdbcType="DECIMAL" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="views" property="views" jdbcType="INTEGER" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, price_before, price, author, views, pic, `status`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from transaction
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from transaction
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.graduate.loyee.entity.Transaction" >
    insert into transaction (id, title, price_before,
      price, author, views,
      pic, `status`)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{priceBefore,jdbcType=DECIMAL},
      #{price,jdbcType=DECIMAL}, #{author,jdbcType=VARCHAR}, #{views,jdbcType=INTEGER},
      #{pic,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.loyee.entity.Transaction" >
    insert into transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="priceBefore != null" >
        price_before,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="views != null" >
        views,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="status != null" >
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="priceBefore != null" >
        #{priceBefore,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        #{views,jdbcType=INTEGER},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.loyee.entity.Transaction" >
    update transaction
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="priceBefore != null" >
        price_before = #{priceBefore,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.loyee.entity.Transaction" >
    update transaction
    set title = #{title,jdbcType=VARCHAR},
      price_before = #{priceBefore,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      author = #{author,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getResellData" parameterType="com.graduate.loyee.entity.Transaction" resultType="com.graduate.loyee.entity.Transaction">
    SELECT <include refid="Base_Column_List" />
    FROM transaction
    WHERE
    status = 0
  </select>
  <select id="selectByCondition" parameterType="com.graduate.loyee.vo.ResellVo.SelectTransByConditionVo"
          resultType="com.graduate.loyee.entity.Transaction">
    SELECT <include refid="Base_Column_List" />
    FROM transaction
    <where>
      <if test="content != null" >
        `title` LIKE concat('%',#{content,jdbcType=VARCHAR},'%')
        OR
        `author` LIKE concat('%',#{content,jdbcType=VARCHAR},'%')
      </if>
      <if test="priceMin != null" >
        AND `price` &gt;= #{priceMin,jdbcType=DECIMAL}
      </if>
      <if test="priceMax != null" >
        AND `price` &lt;= #{priceMax,jdbcType=DECIMAL}
      </if>
    </where>
  </select>
</mapper>